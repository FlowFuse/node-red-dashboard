{
    "root": true,
    "env": {
        "es2022": true
    },
    "plugins": ["promise", "no-only-tests", "eslint-plugin-html"],
    "extends": [
        "eslint:recommended", 
        "standard",
        "plugin:import/recommended",
        "plugin:promise/recommended",
        "plugin:cypress/recommended"
    ],
    "globals":{
        "RED": "readonly",
        "$": "readonly"
    },
    "parserOptions": {
        "ecmaVersion": 2022
    },
    "ignorePatterns": ["dist/", "*.svg", "*.xml"],
    "rules": {
        // Inbuilt
        "indent": ["error", 4],
        "object-shorthand": ["error"],
        "sort-imports": [
            "error",
            {
                "ignoreDeclarationSort": true
            }
        ],
        "no-console": ["error", { "allow": ["log", "info", "warn", "error"] }],
        // "no-console": ["error", { "allow": ["info", "warn", "error"] }], // TODO: enable this for v1.0.0

        // plugin:import
        "import/order": [
            "error",
            {
                "alphabetize": {
                    "order": "asc"
                },
                "newlines-between": "always-and-inside-groups"
            }
        ],
        "import/no-unresolved": "error",

        // plugin:no-only-tests
        "no-only-tests/no-only-tests": "error",

        // plugin:promise
        "promise/catch-or-return": ["error", { "allowFinally": true }]
    },
    "overrides": [
        // Tests use Mocha
        {
            "files": ["test/**"],
            "env": {
                "mocha": true
            }
        },

        // Nodes use CommonJS and are imported by node-red into a Node-Runtime
        {   
            "files": "nodes/**",
            "extends": ["plugin:n/recommended"],
            "env": {
                "commonjs": true,
                "browser": false,
                "node": true
            },
            "globals": {
                "require": "readonly",
                "module": "readonly",
                "__dirname": "readonly",
                "__filename": "readonly"
            },
            "rules": {
                // plugin:n
                "n/file-extension-in-import": "error",
                "n/no-missing-import": "error",
                "n/no-missing-require": "error"
            }
        },

        // Frontend runs in the browser and builds with vite
        {
            "files": "ui/src/**",
            "plugins": ["vue", "vuetify"],
            "extends": [
                "plugin:vue/vue3-recommended",
                "plugin:vuetify/base"
            ],
            "env": {
                "browser": true,
                "commonjs": false
            },
            "parserOptions": {
                "sourceType": "module",
                "ecmaVersion": 2022
            },
            "rules": {
                // plugin:vue
                "vue/html-indent": ["error", 4],
                "vue/singleline-html-element-content-newline": "off",
                "vue/max-attributes-per-line": "off",
                "vue/attribute-hyphenation": "off",

                // plugin:promise
                "promise/always-return": "off" // common Vue.js pattern
            }
        },

        // Docs also Vue in browser but are less strict
        {
            "files": "docs/**",
            "plugins": ["vue"],
            "extends": [
                "plugin:vue/vue3-essential"
            ],
            "env": {
                "browser": true,
                "commonjs": false
            },
            "parserOptions": {
                "sourceType": "module",
                "ecmaVersion": 2022
            }
        },

        // Cypress is used for E2E
        {
            "files": "test/e2e/**",
            "env": {
                "cypress/globals": true
            },
            "extends": ["plugin:cypress/recommended"],
            "plugins": ["cypress"],
            "rules": {
                // plugin:cypress
                "cypress/require-data-selectors": "warn",
                "cypress/assertion-before-screenshot": "error",
                "cypress/no-force": "warn",
                "cypress/no-pause": "error",

                // plugin:n
                "promise/always-return": "off",
                "promise/catch-or-return": "off"
            }
        }
    ]
}
